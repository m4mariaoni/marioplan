{"version":3,"sources":["components/layout/SignedInLinks.jsx","store/actions/authActions.jsx","components/layout/SignedOutLinks.jsx","components/layout/Navbar.jsx","components/dashboard/Notifications.jsx","components/projects/ProjectSummary.jsx","components/projects/ProjectList.jsx","components/dashboard/Dashboard.jsx","components/projects/ProjectDetails.jsx","components/auth/SignIn.jsx","components/auth/SignUp.jsx","components/projects/CreateProject.jsx","store/actions/projectActions.jsx","App.js","serviceWorker.js","store/reducers/authReducer.jsx","store/reducers/projectReducer.jsx","store/reducers/rootReducer.jsx","config/fbConfig.jsx","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","catch","err","props","console","log","className","to","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","isLoaded","Notifications","notifications","map","item","key","id","user","content","time","toDate","toDateString","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","cred","credential","signInWithEmailAndPassword","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","Date","App","path","exact","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","settings","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","userProfile","useFirestoreForProfile","enableRedirectHandling","resetBeforeLogin","createFirestoreInstance","AuthIsLoaded","children","useSelector","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.510076c3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { signOut } from \"../../store/actions/authActions\";\r\n\r\nconst SignedInLinks = (props) => {\r\n  console.log(\"out\", props);\r\n  return (\r\n    <ul className=\"right\">\r\n      <li>\r\n        <NavLink to=\"/createproject\">New Project</NavLink>\r\n      </li>\r\n      <li>\r\n        <a onClick={props.signOut}>Log Out</a>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\r\n          {props.profile.initials}\r\n        </NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signOut: () => dispatch(signOut()),\r\n  };\r\n};\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);\r\n","export const signIn = (credential) => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(credential.email, credential.password)\r\n      .then(() => {\r\n        dispatch({ type: \"LOGIN_SUCCESS\" });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({ type: \"LOGIN_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        dispatch({ type: \"SIGNOUT_SUCCESS\" });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({ type: \"SIGNOUT_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signUp = (newUser) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\r\n      .then((resp) => {\r\n        return firestore\r\n          .collection(\"users\")\r\n          .doc(resp.user.uid)\r\n          .set({\r\n            firstName: newUser.firstName,\r\n            lastName: newUser.lastName,\r\n            initials: newUser.firstName[0] + newUser.lastName[0],\r\n          });\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: \"SIGNUP_SUCCESS\" });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({ type: \"SIGNUP_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst SignedOutLinks = () => {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li>\r\n        <NavLink to=\"/signUp\">Signup</NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/signIn\">Login</NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default SignedOutLinks;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport SignedInLinks from \"./SignedInLinks\";\r\nimport SignedOutLinks from \"./SignedOutLinks\";\r\nconst Navbar = (props) => {\r\n  const { auth, profile } = props;\r\n  console.log(\"navv\", auth);\r\n  const links = auth.uid ? (\r\n    <SignedInLinks profile={profile} />\r\n  ) : (\r\n    <SignedOutLinks />\r\n  );\r\n  console.log(\"navid\", links);\r\n  return (\r\n    <nav className=\"nav-wrapper grey darken-3\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"brand-logo\">\r\n          MarioPlan\r\n        </Link>\r\n        {auth.isLoaded && links}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(\"nav\", state);\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React from \"react\";\r\n\r\nconst Notifications = (props) => {\r\n  console.log(\"notify\", props);\r\n  const { notifications } = props;\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"card z-depth-0\">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">Notifications</span>\r\n          <ul className=\"notifications\">\r\n            {notifications &&\r\n              notifications.map((item) => {\r\n                return (\r\n                  <li key={item.id}>\r\n                    <span className=\"pink-text\">{item.user} </span>\r\n                    <span className=\"\">{item.content}</span>\r\n                    <div className=\"grey-text note-date\">\r\n                      {item.time.toDate().toDateString()}\r\n                    </div>\r\n                  </li>\r\n                );\r\n              })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notifications;\r\n","import React from \"react\";\r\n\r\nconst ProjectSummary = ({ project }) => {\r\n  return (\r\n    <div className=\"card z depth-0 project-summary\">\r\n      <div className=\"card-content grey-text text-darken-3\">\r\n        <span className=\"card-title\">{project.title}</span>\r\n        <p>\r\n          {project.authorFirstName} {project.authorLastName}\r\n        </p>\r\n        <p className=\"grey-text\">{project.createdAt.toDate().toDateString()}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectSummary;\r\n","import React from \"react\";\r\nimport ProjectSummary from \"./ProjectSummary\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst ProjectList = ({ projects }) => {\r\n  return (\r\n    <div className=\"project-list section\">\r\n      {projects &&\r\n        projects.map((project) => {\r\n          return (\r\n            <NavLink to={\"/project/\" + project.id} key={project.id}>\r\n              <ProjectSummary project={project} />\r\n            </NavLink>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectList;\r\n","import React, { Component } from \"react\";\r\nimport Notifications from \"./Notifications\";\r\nimport ProjectList from \"../projects/ProjectList\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    const { projects, auth, notifications } = this.props;\r\n    console.log(\"dashboardauth\", auth);\r\n\r\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n    return (\r\n      <div className=\"dashboard container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m6\">\r\n            <ProjectList projects={projects} />\r\n          </div>\r\n          <div className=\"col s12 m5 offset-m1\">\r\n            <Notifications notifications={notifications} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  console.log(\"dashboardstate\", state);\r\n\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications,\r\n    //projects: state.project.projects,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: \"projects\",orderBy: [\"createdAt\", \"desc\"] },\r\n    { collection: \"notifications\", limit: 3, orderBy: [\"time\", \"desc\"] },\r\n  ])\r\n)(Dashboard);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst ProjectDetails = (props) => {\r\n  const id = props.match.params.id;\r\n  const { project, auth } = props;\r\n  console.log(\"prodetails\", project);\r\n  console.log(\"proauthdetails\", auth);\r\n  if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n  if (project) {\r\n    return (\r\n      <div className=\"container section project-details\">\r\n        <div className=\"card z-depth-0\">\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title\">\r\n              {project.title} - {id}\r\n            </span>\r\n            <p>{project.content}</p>\r\n            <div className=\"card-action grey lighten-4 grey-text\">\r\n              <div>\r\n                {\" \"}\r\n                Posted by {project.authorFirstName}\r\n                {project.authorLastName}\r\n              </div>\r\n              <div className=\"grey-text\">\r\n                {project.createdAt.toDate().toDateString()}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else return <div className=\"container center\">Loading...</div>;\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  console.log(\"stateDetails\", state);\r\n  console.log(\"ownprops\", ownProps);\r\n  const id = ownProps.match.params.id;\r\n  const projects = state.firestore.data.projects;\r\n  const project = projects ? projects[id] : null;\r\n  return {\r\n    project: project,\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([{ collection: \"projects\" }])\r\n)(ProjectDetails);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { signIn } from \"../../store/actions/authActions\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    // console.log('e',e);\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signIn(this.state);\r\n  };\r\n\r\n  render() {\r\n    const { authError, auth } = this.props;\r\n    console.log(\"siginauth\", auth);\r\n    if (auth.uid) return <Redirect to=\"/\" />;\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n            <div className=\"red-text center\">\r\n              {authError ? <p>{authError}</p> : null}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signIn: (cred) => dispatch(signIn(cred)), //line 17\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { signUp } from \"../../store/actions/authActions\";\r\nimport { compose } from \"redux\";\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    console.log(\"e\", e);\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(this.state);\r\n    this.props.signUp(this.state);\r\n  };\r\n\r\n  render() {\r\n    const { auth, authError } = this.props;\r\n    if (auth.uid) return <Redirect to=\"/\" />;\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"firstName\">FirstName</label>\r\n            <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"lastName\">LastName</label>\r\n            <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n            <div className=\"red-text center\">\r\n              {authError ? <p>{authError}</p> : null}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signUp: (newUser) => {\r\n      dispatch(signUp(newUser));\r\n    },\r\n  };\r\n};\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps))(SignUp);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../store/actions/projectActions\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass CreateProject extends Component {\r\n  state = {\r\n    title: \"\",\r\n    content: \"\",\r\n  };\r\n  handleChange = (e) => {\r\n    //console.log(\"e\", e);\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    //console.log(this.state);\r\n    this.props.createProject(this.state); //line 48\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { auth } = this.props;\r\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Create New</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"title\">Title</label>\r\n            <input type=\"text\" id=\"title\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"content\">Project Content</label>\r\n            <textarea\r\n              className=\"materialize-textarea\"\r\n              id=\"content\"\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(\"createProject1\", state);\r\n  return {\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project)), //line 17\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\r\n","export const createProject = (project) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    //make api call\r\n    //dispatch the CRUD actions\r\n    //sent to reducer\r\n    const firestore = getFirestore();\r\n    const profile = getState().firebase.profile;\r\n    const authorId = getState().firebase.auth.uid;\r\n    console.log(\"projectAction\", getState());\r\n    firestore\r\n      .collection(\"projects\")\r\n      .add({\r\n        ...project,\r\n        authorFirstName: profile.firstName,\r\n        authorLastName: profile.lastName,\r\n        authorId: authorId,\r\n        createdAt: new Date(),\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: \"CREATE_PROJECT\", project });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({ type: \"CREATE_PROJECT_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Navbar from \"./components/layout/Navbar\";\r\nimport Dashboard from \"./components/dashboard/Dashboard\";\r\nimport ProjectDetails from \"./components/projects/ProjectDetails\";\r\nimport SignIn from \"./components/auth/SignIn\";\r\nimport SignUp from \"./components/auth/SignUp\";\r\nimport CreateProject from \"./components/projects/CreateProject\";\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"App\">\r\n        <Navbar />\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Dashboard} />\r\n          <Route path=\"/project/:id\" component={ProjectDetails} />\r\n          <Route path=\"/signIn\" component={SignIn} />\r\n          <Route path=\"/signUp\" component={SignUp} />\r\n          <Route path=\"/createproject\" component={CreateProject} />\r\n        </Switch>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const initState = {\r\n  authError: null,\r\n};\r\nconst authReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN_ERROR\":\r\n      console.log(\"login error\");\r\n      return {\r\n        ...state,\r\n        authError: \"Login failed\",\r\n      };\r\n    case \"LOGIN_SUCCESS\":\r\n      console.log(\"login success\");\r\n      return {\r\n        ...state,\r\n        authError: null,\r\n      };\r\n\r\n    case \"SIGNOUT_SUCCESS\":\r\n      console.log(\"signout success\");\r\n      return state;\r\n    case \"SIGNUP_SUCCESS\":\r\n      console.log(\"signup success\");\r\n      return {\r\n        ...state,\r\n        authError: null,\r\n      };\r\n    case \"SIGNUP_ERROR\":\r\n      console.log(\"signup error\");\r\n      return {\r\n        ...state,\r\n        authError: action.err.message,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","const initState = {\r\n  projects: [\r\n    {\r\n      id: 1,\r\n      title: \"help me find peach\",\r\n      content: \"quia et suscipit\\nsuscipit\",\r\n    },\r\n    {\r\n      id: 2,\r\n      title: \"collect all the stars\",\r\n      content: \"est rerum tempore vitae\\nsequi\",\r\n    },\r\n    {\r\n      id: 3,\r\n      title: \"ea molestias quasi\",\r\n      content: \"et iusto sed quo iure\\nvoluptatem\",\r\n    },\r\n  ],\r\n};\r\nconst projectReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"CREATE_PROJECT\":\r\n      console.log(\"created project\", action.project);\r\n      return state;\r\n    case \"CREATE_PROJECT_ERROR\":\r\n      console.log(\"create project error\", action.err);\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default projectReducer;\r\n","import authReducer from \"./authReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport { combineReducers } from \"redux\";\r\nimport { firestoreReducer } from \"redux-firestore\";\r\nimport { firebaseReducer } from \"react-redux-firebase\";\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyAm2wPNypfD4H1ZNOS5NmcW9HvU6ki7sJY\",\r\n  authDomain: \"the-ninja-marioplan.firebaseapp.com\",\r\n  databaseURL: \"https://the-ninja-marioplan.firebaseio.com\",\r\n  projectId: \"the-ninja-marioplan\",\r\n  storageBucket: \"the-ninja-marioplan.appspot.com\",\r\n  messagingSenderId: \"397221235629\",\r\n  appId: \"1:397221235629:web:3d7a12155ce1958ba76f24\",\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.firestore().settings({});\r\n\r\nexport default firebase;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport rootReducer from \"./store/reducers/rootReducer\";\r\nimport { Provider } from \"react-redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {\r\n  createFirestoreInstance,\r\n  reduxFirestore,\r\n  getFirestore,\r\n} from \"redux-firestore\";\r\nimport { ReactReduxFirebaseProvider, getFirebase } from \"react-redux-firebase\";\r\nimport fbConfig from \"./config/fbConfig\";\r\nimport firebase from \"firebase/app\";\r\n//for render on auth ready\r\nimport { useSelector } from \"react-redux\";\r\nimport { isLoaded } from \"react-redux-firebase\";\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  compose(\r\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\r\n    reduxFirestore(firebase, fbConfig)\r\n    //reactReduxFirebase(fbConfig)\r\n  )\r\n);\r\n\r\n//construct required properties\r\nconst profileSpecificProps = {\r\n  userProfile: \"users\",\r\n  useFirestoreForProfile: true,\r\n  enableRedirectHandling: false,\r\n  resetBeforeLogin: false,\r\n};\r\n\r\nconst rrfProps = {\r\n  firebase,\r\n  config: fbConfig,\r\n  config: profileSpecificProps,\r\n  dispatch: store.dispatch,\r\n  createFirestoreInstance,\r\n};\r\n\r\nfunction AuthIsLoaded({ children }) {\r\n  const auth = useSelector((state) => state.firebase.auth);\r\n  if (!isLoaded(auth))\r\n    return (\r\n      <div className=\"center\">\r\n        {\" \"}\r\n        <p>Loading Mario Plan...</p>\r\n      </div>\r\n    );\r\n  return children;\r\n}\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <ReactReduxFirebaseProvider {...rrfProps}>\r\n      <AuthIsLoaded>\r\n        <App />\r\n      </AuthIsLoaded>\r\n    </ReactReduxFirebaseProvider>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}